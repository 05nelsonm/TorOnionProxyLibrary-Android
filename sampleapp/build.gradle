apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

android {
    packagingOptions {
        exclude 'META-INF/*.kotlin_module'
        exclude 'META-INF/*.version'
    }
    compileSdkVersion versions.compileSdk
    buildToolsVersion versions.buildTools

    defaultConfig {
        applicationId "io.matthewnelson.sampleapp"
        minSdkVersion versions.minSdk
        targetSdkVersion versions.compileSdk
        versionCode 1
        versionName VERSION_NAME

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunnerArguments disableAnalytics: 'true'
        consumerProguardFiles 'proguard-rules.pro'
    }

    // Gradle 4.0's introduction of Google analytics to Android App Developers.
    // https://developer.android.com/studio/releases/gradle-plugin
    dependenciesInfo {
        // Disables dependency metadata when building APKs.
        includeInApk = false
        // Disables dependency metadata when building Android App Bundles.
        includeInBundle = false
    }

    buildTypes {
        release {
            resValue "string", "app_name", "SampleApp"
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            applicationIdSuffix ".debug"
            resValue "string", "app_name", "SampleApp Debug"
            debuggable true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    // https://github.com/guardianproject/tor-android/blob/master/sampletorapp/build.gradle
    splits {

        // Configures multiple APKs based on ABI. This helps keep the size
        // down, since PT binaries can be large.
        abi {

            // Enables building multiple APKs per ABI.
            enable true

            // By default all ABIs are included, so use reset() and include to specify
            // that we only want APKs for x86 and x86_64, armeabi-v7a, and arm64-v8a.

            // Resets the list of ABIs that Gradle should create APKs for to none.
            reset()

            // Specifies a list of ABIs that Gradle should create APKs for.
            include "x86", "armeabi-v7a", "arm64-v8a", "x86_64"

            // Specify whether or not you wish to also generate a universal APK that
            // includes _all_ ABIs.
            universalApk true
        }
    }
}

//repositories {
//    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
//}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation project(':topl-service')
    implementation deps.androidx.appCompat
    implementation deps.androidx.constraintLayout
    implementation deps.androidx.core
    implementation deps.androidx.lifecycle.commonJava8
    implementation deps.androidx.lifecycle.liveData
    implementation deps.androidx.lifecycle.reactiveStreams
    implementation deps.androidx.navigation.fragment
    implementation deps.androidx.navigation.ui
    implementation deps.androidx.recyclerView
    implementation deps.kotlin.coroutinesAndroid
    implementation deps.kotlin.coroutinesCore
    implementation deps.kotlin.stdlib

    implementation 'io.matthewnelson.encrypted-storage:encrypted-storage:2.0.1'
    implementation 'io.matthewnelson.topl-android:tor-binary:0.4.4.0'

    testImplementation testDeps.junit
}
