apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion 28
    buildToolsVersion "29.0.3"

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 28
        versionCode 1
        versionName "0.0.3"

        consumerProguardFiles 'proguard-rules.pro'
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'net.freehaven.tor.control:jtorctl:0.2'
    implementation 'org.slf4j:slf4j-api:1.7.30'
    implementation 'org.slf4j:slf4j-android:1.7.30'

    testImplementation 'junit:junit:4.12'

    androidTestImplementation 'androidx.test:core:1.2.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}

task updatePluggableTransportsSubmodule(type: Exec) {
    workingDir "$rootDir"
    commandLine "scripts/pull_latest_transports.sh"
}

task copyPluggableTransports(type: Copy, dependsOn: updatePluggableTransportsSubmodule) {
    from("$rootDir/external/AndroidPluggableTransports/APTDispatchLibrary-MeekObfs4-Legacy/src/main/libs")
    into("src/main/jniLibs")
    rename { filename ->
        filename.replace "$filename", 'libObfs4proxy.so'
    }
}

task buildTorBinaries(type: Exec) {
    workingDir "$rootDir"
    commandLine 'scripts/update_tor_binaries.sh', 'build'
}

task copyTorBinaries(type: Copy, dependsOn: buildTorBinaries) {
    from("$rootDir/external/tor-android/tor-android-binary/src/main/libs")
    into("src/main/jniLibs")
    rename { filename ->
        filename.replace "$filename", 'libTor.so'
    }
}

task updateTorBinaries(type: Exec, dependsOn: copyTorBinaries) {
    workingDir "$rootDir"
    commandLine 'scripts/update_tor_binaries.sh', 'update_version_number'
}

task checkForTorBinaryUpdate(type: Exec) {
    workingDir "$rootDir"
    commandLine 'scripts/update_tor_binaries.sh', 'check_for_update'
}

gradle.projectsEvaluated {
    preBuild.dependsOn(checkForTorBinaryUpdate)
    preBuild.dependsOn(copyPluggableTransports)
}
